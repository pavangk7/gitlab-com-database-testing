stages:
  - prepare
  - migrations

default:
  interruptible: true
  timeout: 90m

variables:
  RAILS_ENV: "test"
  BUILD_PATH: "/builds/gitlab"
  GL_REPO: "/repos/gitlab"
  IMAGE_NAME: "gitlab-com-migrations:${GL_SHA}"

.image:base:
  stage: prepare
  tags:
    - builder

image:gitlab:
  extends: .image:base
  script:
    - echo Building ${IMAGE_NAME}
    - docker build --build-arg GL_SHA=${GL_SHA} -t ${IMAGE_NAME} docker/gitlab
    - docker tag ${IMAGE_NAME} ${DOCKER_REGISTRY}/${IMAGE_NAME}
    - docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}

image:dblab-ssh:
  extends: .image:base
  variables:
    IMAGE_NAME: "gitlab-com-migrations-dblab-ssh:latest"
  script:
    - echo Building ${IMAGE_NAME}
    - docker build -t ${IMAGE_NAME} docker/dblab-ssh
    - docker tag ${IMAGE_NAME} ${DOCKER_REGISTRY}/${IMAGE_NAME}
    - docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}

image:redis:
  extends: .image:base
  variables:
    IMAGE_NAME: "docker.io/library/redis:4.0-alpine"
  script:
    - docker pull $IMAGE_NAME
    - docker tag ${DOCKER_REGISTRY}/${IMAGE_NAME} ${IMAGE_NAME}
    - docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}

image:postgres:
  extends: .image:base
  variables:
    IMAGE_NAME: "docker.io/library/postgres:11.6"
  script:
    - docker pull $IMAGE_NAME
    - docker tag ${DOCKER_REGISTRY}/${IMAGE_NAME} ${IMAGE_NAME}
    - docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}

db:status:
  stage: migrations
  image: ${DOCKER_REGISTRY}/$IMAGE_NAME
  tags:
    - worker
  services:
    - name: postgres:11.6
      command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
    - name: redis:4.0-alpine
  variables:
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - env
    - ls -l
    - source scripts/utils.sh
    - source scripts/prepare_build.sh
    - rake db:migrate:status

dblab:
  stage: migrations
  image: gitlab-com-migrations-dblab-ssh:latest
  tags:
    - worker
  script:
    - dblab instance status
