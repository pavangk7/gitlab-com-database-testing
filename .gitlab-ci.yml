workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        CI_COMMIT_BRANCH: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - when: always

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

license_scanning:
  variables:
    LICENSE_FINDER_CLI_OPTS: "--recursive"

lint:
  stage: test
  image: ruby:2.7
  script:
    - cd notifier
    - bundle install
    - bundle exec rubocop

shellcheck:
  stage: test
  image: koalaman/shellcheck-alpine:stable
  before_script:
    - shellcheck --version
  script:
    - shellcheck docker/**/*.sh misc/trigger-test-pipeline.sh

rspec:
  stage: test
  image: ruby:2.7
  script:
    - cd notifier
    - bundle install
    - bundle exec rspec --format progress --format RspecJunitFormatter --out rspec.xml
    - mv rspec.xml ..
  artifacts:
    when: always
    paths:
      - rspec.xml
    reports:
      junit: rspec.xml

run pipeline:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
  image: python:alpine
  before_script:
    - apk add --update curl jq
  variables:
    RUN_DECOMPOSED: 'false'
  script:
    - ./misc/trigger-test-pipeline.sh

run pipeline decomposed:
  extends:
    - run pipeline
  variables:
    RUN_DECOMPOSED: 'true'