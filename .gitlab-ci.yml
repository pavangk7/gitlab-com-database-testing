stages:
  - prepare
  - migrations

default:
  interruptible: true
  timeout: 90m

variables:
  RAILS_ENV: "test"
  BUILD_PATH: "/builds/gitlab"
  GL_REPO: "/repos/gitlab"
  IMAGE_NAME: "gitlab-com-migrations:${GL_SHA}"

image:gitlab:
  stage: prepare
  tags:
    - builder
  variables:
    IMAGE_PATH: "/docker-builds/${IMAGE_NAME}"
  script:
    - mkdir -p /docker-builds
    - docker build --build-arg GL_SHA=${GL_SHA} -t ${IMAGE_NAME} .
    - docker save -o ${IMAGE_NAME} {IMAGE_PATH}
    - cat ${IMAGE_PATH} | bzip2 - | ssh $MIGRATOR_HOST "bunzip2 | docker load -"

image:redis:
  stage: prepare
  tags:
    - builder
  variables:
    IMAGE_NAME: "redis:4.0-alpine"
    IMAGE_PATH: "/docker-builds/${IMAGE_NAME}"
  script:
    - mkdir -p /docker-builds
    - docker pull $IMAGE_NAME
    - docker save -o ${IMAGE_NAME} {IMAGE_PATH}
    - cat ${IMAGE_PATH} | bzip2 - | ssh $MIGRATOR_HOST "bunzip2 | docker load -"

image:postgres:
  stage: prepare
  tags:
    - builder
  variables:
    IMAGE_NAME: "postgres:11.6"
    IMAGE_PATH: "/docker-builds/${IMAGE_NAME}"
  script:
    - mkdir -p /docker-builds
    - docker pull $IMAGE_NAME
    - docker save -o ${IMAGE_NAME} {IMAGE_PATH}
    - cat ${IMAGE_PATH} | bzip2 - | ssh $MIGRATOR_HOST "bunzip2 | docker load -"

db:status:
  stage: migrations
  image: $IMAGE_NAME
  tags:
    - dblab
  services:
    - name: postgres:11.6
      command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
    - name: redis:4.0-alpine
  variables:
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - env
    - ls -l
    - source scripts/utils.sh
    - source scripts/prepare_build.sh
    - rake db:migrate:status
